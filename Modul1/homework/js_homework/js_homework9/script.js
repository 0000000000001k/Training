//* Теоретичні питання
//
//     Опишіть, як можна створити новий HTML тег на сторінці. 1. Руками і клавіатурою в html документі :) 2. Завдяки innerHTML звернувшись до необхідного розділу через dom
//     Опишіть, що означає перший параметр функції insertAdjacentHTML і опишіть можливі варіанти цього параметра. Перший параметр вказує, куди вставити елемент. Варіанти: beforebegin, afterbegin, beforeend, afterend.
//     Як можна видалити елемент зі сторінки? за допомогою node.remove
//
//     Завдання
//     Реалізувати функцію, яка отримуватиме масив елементів і виводити їх на сторінку у вигляді списку. Завдання має бути виконане на чистому Javascript без використання бібліотек типу jQuery або React.
//
//     Технічні вимоги:
//
//     Створити функцію, яка прийматиме на вхід масив і опціональний другий аргумент parent - DOM-елемент, до якого буде прикріплений список (по дефолту має бути document.body.
//     кожен із елементів масиву вивести на сторінку у вигляді пункту списку;
//
//     Приклади масивів, які можна виводити на екран:
//
//     ["hello", "world", "Kiev", "Kharkiv", "Odessa", "Lviv"];
//     ["1", "2", "3", "sea", "user", 23];
//     Можна взяти будь-який інший масив.
//
//     Необов'язкове завдання підвищеної складності:
//     Додайте обробку вкладених масивів. Якщо всередині масиву одним із елементів буде ще один масив, виводити його як вкладений список.
//     Приклад такого масиву:
//
//     ["Kharkiv", "Kiev", ["Borispol", "Irpin"], "Odessa", "Lviv", "Dnieper"];
//
//     Підказка: використовуйте map для обходу масиву та рекурсію, щоб обробити вкладені масиви.
//     Очистити сторінку через 3 секунди. Показувати таймер зворотного відліку (лише секунди) перед очищенням сторінки. *//

const array = ['hello', 'world', 23, '23', null];
const parent = document.body;

const func = (array, parent) => {
    const ul = document.createElement("ul")

    parent.append(ul)
     array.forEach(items =>{
        ul.insertAdjacentHTML('afterbegin',`<li>${items}</li>`)
    })
}
func(array, parent)